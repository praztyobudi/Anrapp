"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/account/page",{

/***/ "(app-pages-browser)/./app/utils/jwtdecode.ts":
/*!********************************!*\
  !*** ./app/utils/jwtdecode.ts ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodedToken: function() { return /* binding */ decodedToken; },\n/* harmony export */   getIdToken: function() { return /* binding */ getIdToken; },\n/* harmony export */   getToken: function() { return /* binding */ getToken; }\n/* harmony export */ });\n/* harmony import */ var js_cookie__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! js-cookie */ \"(app-pages-browser)/./node_modules/js-cookie/dist/js.cookie.mjs\");\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jwt-decode */ \"(app-pages-browser)/./node_modules/jwt-decode/build/esm/index.js\");\n// utils/auth.ts\n\n\nfunction getToken() {\n    return js_cookie__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get(\"token\") || null;\n}\nfunction decodedToken(token) {\n    try {\n        const decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_1__.jwtDecode)(token);\n        return decoded;\n    } catch (err) {\n        console.error(\"Failed to decode token\", err);\n        return null;\n    }\n}\nfunction getIdToken() {\n    const token = getToken();\n    if (!token) return null;\n    const decoded = decodedToken(token);\n    var _decoded_id;\n    return (_decoded_id = decoded === null || decoded === void 0 ? void 0 : decoded.id) !== null && _decoded_id !== void 0 ? _decoded_id : null;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9qd3RkZWNvZGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQSxnQkFBZ0I7QUFDZ0I7QUFDTztBQVNoQyxTQUFTRTtJQUNkLE9BQU9GLGlEQUFPQSxDQUFDRyxHQUFHLENBQUMsWUFBWTtBQUNqQztBQUNPLFNBQVNDLGFBQWFDLEtBQWE7SUFDeEMsSUFBSTtRQUNGLE1BQU1DLFVBQVVMLHFEQUFTQSxDQUFjSTtRQUN2QyxPQUFPQztJQUNULEVBQUUsT0FBT0MsS0FBSztRQUNaQyxRQUFRQyxLQUFLLENBQUMsMEJBQTBCRjtRQUN4QyxPQUFPO0lBQ1Q7QUFDRjtBQUVPLFNBQVNHO0lBQ2QsTUFBTUwsUUFBUUg7SUFDZCxJQUFJLENBQUNHLE9BQU8sT0FBTztJQUVuQixNQUFNQyxVQUFVRixhQUFhQztRQUN0QkM7SUFBUCxPQUFPQSxDQUFBQSxjQUFBQSxvQkFBQUEsOEJBQUFBLFFBQVNLLEVBQUUsY0FBWEwseUJBQUFBLGNBQWU7QUFDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vYXBwL3V0aWxzL2p3dGRlY29kZS50cz9jYzczIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHV0aWxzL2F1dGgudHNcbmltcG9ydCBDb29raWVzIGZyb20gXCJqcy1jb29raWVcIjtcbmltcG9ydCB7IGp3dERlY29kZSB9IGZyb20gXCJqd3QtZGVjb2RlXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlclBheWxvYWQge1xuICBpZDogbnVtYmVyO1xuICBuYW1lOiBzdHJpbmc7XG4gIHJvbGU6IHN0cmluZztcbiAgZGVwYXJ0bWVudDogc3RyaW5nO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0VG9rZW4oKTogc3RyaW5nIHwgbnVsbCB7XG4gIHJldHVybiBDb29raWVzLmdldChcInRva2VuXCIpIHx8IG51bGw7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlZFRva2VuKHRva2VuOiBzdHJpbmcpOiBVc2VyUGF5bG9hZCB8IG51bGwge1xuICB0cnkge1xuICAgIGNvbnN0IGRlY29kZWQgPSBqd3REZWNvZGU8VXNlclBheWxvYWQ+KHRva2VuKTtcbiAgICByZXR1cm4gZGVjb2RlZDtcbiAgfSBjYXRjaCAoZXJyKSB7IFxuICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gZGVjb2RlIHRva2VuXCIsIGVycik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldElkVG9rZW4oKTogbnVtYmVyIHwgbnVsbCB7XG4gIGNvbnN0IHRva2VuID0gZ2V0VG9rZW4oKTtcbiAgaWYgKCF0b2tlbikgcmV0dXJuIG51bGw7XG5cbiAgY29uc3QgZGVjb2RlZCA9IGRlY29kZWRUb2tlbih0b2tlbik7XG4gIHJldHVybiBkZWNvZGVkPy5pZCA/PyBudWxsO1xufVxuIl0sIm5hbWVzIjpbIkNvb2tpZXMiLCJqd3REZWNvZGUiLCJnZXRUb2tlbiIsImdldCIsImRlY29kZWRUb2tlbiIsInRva2VuIiwiZGVjb2RlZCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImdldElkVG9rZW4iLCJpZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/jwtdecode.ts\n"));

/***/ })

});