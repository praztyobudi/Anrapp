/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/speakyourmind/ide/page",{

/***/ "(app-pages-browser)/./app/dashboard/speakyourmind/ide/riwayat-ide.tsx":
/*!*********************************************************!*\
  !*** ./app/dashboard/speakyourmind/ide/riwayat-ide.tsx ***!
  \*********************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// \"use client\";\n// import { useState } from \"react\";\n// import { propsRiwayatIde } from \"./types\";\n// import { Trash2, RefreshCw, Eye } from \"lucide-react\";\n// import toast, { Toaster } from \"react-hot-toast\";\n// export default function ListIde({\n//   onEdit,\n//   ideas,\n//   setIdeas,\n//   refreshData,\n//   statusMsg,\n// }: propsRiwayatIde) {\n//   const [loading, setLoading] = useState(false);\n//   const handleDelete = async (id: number) => {\n//     if (!confirm(\"Yakin ingin menghapus ide ini?\")) return;\n//     try {\n//       await fetch(`https://app.prazelab.my.id/api/ide/${id}`, {\n//         method: \"DELETE\",\n//       });\n//       setIdeas(prev => prev.filter(i => i.id !== id));\n//       toast.success(\"Berhasil dihapus.\");\n//     } catch (error) {\n//       console.error(\"Error deleting idea:\", error);\n//       toast.error(\"Gagal menghapus!\");\n//     }\n//   };\n//   const isNew = (updatedAt: string) => {\n//     const updated = new Date(updatedAt);\n//     const now = new Date();\n//     const diffSeconds = (now.getTime() - updated.getTime()) / 1000;\n//     return diffSeconds < 60; // anggap baru jika kurang dari 60 detik\n//   };\n//   return (\n//     <>\n//       <Toaster position=\"top-right\" reverseOrder={true} />\n//       <div className=\"flex flex-col gap-4 max-h-[465px]\">\n//         <div className=\"flex items-center justify-between sticky top-0 bg-white z-10\">\n//           {/* Kiri */}\n//           <div className=\"font-bold text-sm md:text-base text-gray-600\">\n//             Your idea history\n//           </div>\n//           {/* Tengah */}\n//           <div className=\"flex items-center gap-2\">\n//             {statusMsg && (\n//               <div className=\"bg-green-100 text-green-700 px-1 py-0.5 rounded text-xs mx-1 whitespace-nowrap\">\n//                 {statusMsg}\n//               </div>\n//             )}\n//             {/* Kanan */}\n//             <button\n//               onClick={async () => {\n//                 setLoading(true);\n//                 await refreshData();\n//                 setLoading(false);\n//               }}\n//               disabled={loading}\n//               className={`text-gray-500 ${loading ? \"opacity-50 cursor-not-allowed\" : \"\"\n//                 }`}\n//               title=\"Refresh\"\n//             >\n//               <RefreshCw size={16} className={loading ? \"animate-spin\" : \"\"} />\n//             </button>\n//           </div>\n//         </div>\n//         <div className=\"border-b-2\"></div>\n//         <div className=\"overflow-y-auto max-h-[500px]\">\n//           {loading ? (\n//             <div className=\"text-center text-gray-500 text-sm\">\n//               {\" \"}\n//               <span>Loading</span>\n//               <span className=\"dot-anim ml-1 inline-block\">.</span>\n//             </div>\n//           ) : ideas.length === 0 ? (\n//             <div className=\"text-center text-gray-500 text-sm\">\n//               {\" \"}\n//               <span>Wait a moment</span>\n//               <span className=\"dot-anim ml-1 inline-block\">.</span>\n//             </div>\n//           ) : (\n//             ideas.map((item, index) => (\n//               <div\n//                 key={index}\n//                 className=\"border-b last:border-0 py-2 last:pb-0 \"\n//               >\n//                 <div className=\"flex justify-between items-center\">\n//                   <div className=\"font-semibold text-gray-700 text-sm\">\n//                     From : {item.from}\n//                   </div>\n//                   {/* <div className=\"text-xs text-gray-700\">{item.date}</div> */}\n//                   <div className=\"text-xs text-gray-700\">\n//                     {isNew(item.date) && (\n//                       <span className=\"ml-2 bg-green-100 text-green-600 p-1 mr-2 rounded-md\">\n//                         New!\n//                       </span>\n//                     )}\n//                     {new Date(item.date).toLocaleDateString(\"id-ID\")}\n//                   </div>\n//                 </div>\n//                 <div className=\"flex justify-between items-center\">\n//                   <div className=\"text-green-600 text-sm mt-1\">\n//                     To : {item.to}\n//                   </div>\n//                   <div className=\"flex gap-2 mt-2 mr-2\">\n//                     <button\n//                       onClick={() => onEdit(item)}\n//                       className=\"text-blue-600 hover:text-blue-800\"\n//                     >\n//                       <Eye size={16} />\n//                     </button>\n//                     <button\n//                       onClick={() => handleDelete(item.id)}\n//                       className=\"text-red-600 hover:text-red-800\"\n//                     >\n//                       <Trash2 size={16} />\n//                     </button>\n//                   </div>\n//                 </div>\n//               </div>\n//             ))\n//           )}\n//         </div>\n//       </div>\n//     </>\n//   );\n// }\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/dashboard/speakyourmind/ide/riwayat-ide.tsx\n"));

/***/ })

});